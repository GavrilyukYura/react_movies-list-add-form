{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitile","setDescription","setImgUrl","setImdbUrl","setImdbId","newMovie","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","required","rows","cols","App","moviesFromServer","setMovie","prevMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82245111.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC <Props> = ({ addMovie }) => {\n  const [title, setTitile] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const newMovie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addMovie(newMovie);\n        setTitile('');\n        setDescription('');\n        setImgUrl('');\n        setImdbUrl('');\n        setImdbId('');\n      }}\n    >\n      <div className=\"column\">\n        <p className=\"subtitle is-5\">Title:</p>\n        <input\n          type=\"text\"\n          data-cy=\"form-title\"\n          className=\"input is-info\"\n          placeholder=\"Enter the film name\"\n          value={title}\n          onChange={(event) => setTitile(event.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"column\">\n        <p className=\"subtitle is-5\">Description:</p>\n        <textarea\n          data-cy=\"form-description\"\n          placeholder=\"Enter the description\"\n          className=\"textarea is-info\"\n          value={description}\n          rows={6}\n          cols={30}\n          onChange={(event) => setDescription(event.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"column\">\n        <p className=\"subtitle is-5\">Image link:</p>\n        <input\n          type=\"text\"\n          data-cy=\"form-imgUrl\"\n          className=\"input is-link\"\n          placeholder=\"https://m.media-amazon.com/images/M/... .jpg\"\n          value={imgUrl}\n          onChange={(event) => setImgUrl(event.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"column\">\n        <p className=\"subtitle is-5\">IMDB link:</p>\n        <input\n          type=\"text\"\n          data-cy=\"form-imdbUrl\"\n          className=\"input is-link\"\n          placeholder=\"https://www.imdb.com/title/...\"\n          value={imdbUrl}\n          onChange={(event) => setImdbUrl(event.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"column\">\n        <p className=\"subtitle is-5\">IMDB ID:</p>\n        <input\n          type=\"text\"\n          data-cy=\"form-imdbUrl\"\n          className=\"input is-info\"\n          placeholder=\"tt0000000\"\n          value={imdbId}\n          onChange={(event) => setImdbId(event.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"column\">\n        <button\n          type=\"submit\"\n          data-cy=\"form-submit-button\"\n          className=\"button is-success \"\n        >\n          Add moviie\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovie(prevMovie => [...prevMovie, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}